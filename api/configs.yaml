app:
  env: ${ENV}
  sanic:
    static: ./src/static
    app:
      templating_enable_async: true
      templating_path_to_templates: ./src/templates/

  database:
    dialect: sqlite
    database: database.db

  caching: ...

  tasks:
    analyzer:
      pooling: True
      frequency: 600 # in seconds
    tracking:
      pooling: True
      frequency: 600 # in seconds

  printer:
    ## NETWORK ADAPTER CONFIGURATION EXAMPLE
    adapter: Network
    settings: 
      host: 192.168.1.83
      profile: TM-T20II

    ## Usb ADAPTER CONFIGURATION EXAMPLE
    # adapter: Usb
    # settings:
    #   profile: TM-T20II
    #   idVendor: ...
    #   idProduct: ...
    #   in_ep: 0x82
    #   out_ep: 0x01


  odoo:
    taxonomy:
      products:
        in_place: False # variation number = variation + in place variations
        variation_number: 2 # aim to have 10 consigne product records == 10 differents usable barcodes 
        template:
          name: Consigne 2
          rule: 999....{NNNDD}
          
      returns:
        - name: Pajot
          value: 0.25
        - name: Celtic
          value: 0.20
        - name: Club Maté
          value: 0.20
        - name: Bière 25/33cl
          value: 0.10
        - name: Bière 75cl
          value: 0.20
        - name: Lait
          value: 0.50
        # - name: Gaz
        #   value: 10.0

      returnables:
        - barcode: 5411087001029 # barcode of the returnable product 
          returnable: True
          returned: Pajot # name of the returns product possibly from returns


    erp:
      login: ${ERP_USERNAME}
      password: ${ERP_PASSWORD}
      database: ${ERP_DB}
      host: ${ERP_URL}
      verbose: False

  logging:
    version: 1
    disable_existing_loggers: False

    formatters:
      simple:
        class: logging.Formatter
        format: "[%(asctime)s][%(name)s][%(process)d][%(levelname)s] | %(message)s"
        datefmt: "%d-%m-%Y %H:%M:%S"

    handlers:
      stream:
        class: logging.StreamHandler
        level: INFO
        formatter: simple
        stream: ext://sys.stdout

      error_stream:
        class: logging.StreamHandler
        level: INFO
        formatter: simple
        stream: ext://sys.stderr

      error_file:
        class: logging.FileHandler
        level: ERROR
        formatter: simple
        filename: ./volume/errors.log

      access_file:
        class: logging.FileHandler
        level: INFO
        formatter: simple
        filename: ./volume/log.log

    loggers:
      endpointAccess:
        level: INFO
        handlers: [stream, error_file, access_file]
        propagate: True
      tasks:
        level: INFO
        handlers: [stream, error_file, access_file]
        propagate: True
